#include <bits/stdc++.h>

const int maxn = 1e3, mod = 998244353;

int f[maxn + 1][maxn * 2 + 1][2][2];

int main()
{
    std::freopen("D.in", "r", stdin);

    int n, k;
    std::cin >> n >> k;

    f[1][2][0][1] = f[1][2][1][0] = 1;
    f[1][1][0][0] = f[1][1][1][1] = 1;
    for (int i = 2; i <= n; ++i)
    {
        for (int j = 1; j <= k; ++j)
        {
            f[i][j][0][0] = (f[i][j][0][0] + f[i - 1][j][0][0]) % mod;
            if (j + 1 <= k)
                f[i][j + 1][0][1] = (f[i][j + 1][0][1] + f[i - 1][j][0][0]) % mod;
            if (j + 1 <= k)
                f[i][j + 1][1][0] = (f[i][j + 1][1][0] + f[i - 1][j][0][0]) % mod;
            if (j + 1 <= k)
                f[i][j + 1][1][1] = (f[i][j + 1][1][1] + f[i - 1][j][0][0]) % mod;

            f[i][j][0][0] = (f[i][j][0][0] + f[i - 1][j][0][1]) % mod;
            f[i][j][0][1] = (f[i][j][0][1] + f[i - 1][j][0][1]) % mod;
            if (j + 2 <= k)
                f[i][j + 2][1][0] = (f[i][j + 2][1][0] + f[i - 1][j][0][1]) % mod;
            f[i][j][1][1] = (f[i][j][1][1] + f[i - 1][j][0][1]) % mod;

            f[i][j][0][0] = (f[i][j][0][0] + f[i - 1][j][1][0]) % mod;
            if (j + 2 <= k)
                f[i][j + 2][0][1] = (f[i][j + 2][0][1] + f[i - 1][j][1][0]) % mod;
            f[i][j][1][0] = (f[i][j][1][0] + f[i - 1][j][1][0]) % mod;
            f[i][j][1][1] = (f[i][j][1][1] + f[i - 1][j][1][0]) % mod;

            if (j + 1 <= k)
                f[i][j + 1][0][0] = (f[i][j + 1][0][0] + f[i - 1][j][1][1]) % mod;
            if (j + 1 <= k)
                f[i][j + 1][0][1] = (f[i][j + 1][0][1] + f[i - 1][j][1][1]) % mod;
            if (j + 1 <= k)
                f[i][j + 1][1][0] = (f[i][j + 1][1][0] + f[i - 1][j][1][1]) % mod;
            f[i][j][1][1] = (f[i][j][1][1] + f[i - 1][j][1][1]) % mod;
        }
    }

    std::cout << ((f[n][k][0][0] + f[n][k][0][1]) % mod + (f[n][k][1][0] + f[n][k][1][1]) % mod) % mod << std::endl;
    return 0;
}